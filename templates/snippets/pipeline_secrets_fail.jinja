### Pipeline Secrets Troubleshooting

**Key Symptoms**
- CI/CD jobs fail with `Invalid credentials`, `AccessDenied`, or `Secret not found`
- Pipeline log shows empty or masked values instead of secrets
- Environment variables not injected into build jobs
- Deployment jobs blocked due to missing tokens/keys

**Immediate Triage**
- Check pipeline logs for environment variable expansion (`echo $VAR_NAME`)
- Verify secrets exist in platform settings (GitHub → Settings → Secrets, GitLab → CI/CD Variables, Jenkins → Credentials store)
- Confirm correct scope (org-level vs repo/project-level vs environment-level)
- Ensure secret names match exactly in pipeline config (case-sensitive)
- Validate that secrets are not overridden by empty values in job config

**Safe Fix**
    ```yaml
    # GitHub Actions example using encrypted secrets
    name: Deploy
    on: [push]
    jobs:
      deploy:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v3
          - name: Deploy with secret
            run: |
              echo "Deploying with API key..."
              ./deploy.sh --token ${{ secrets.DEPLOY_TOKEN }}
    ```

    ```yaml
    # GitLab CI example
    deploy:
      stage: deploy
      script:
        - echo "Deploying with token..."
        - ./deploy.sh --token $DEPLOY_TOKEN
      only:
        - main
    ```

**Cloud & Platform Notes**
- Rotate leaked or invalid secrets immediately
- Use short-lived credentials (AWS STS, GCP Workload Identity, Azure Managed Identity)
- For Kubernetes deploy jobs, ensure secrets are mounted securely as env vars or volumes
- Consider external secret managers: HashiCorp Vault, AWS Secrets Manager, GCP Secret Manager, Azure Key Vault

**Monitoring & Prevention**
- Enable audit logging for secret access/usage
- Set alerts on failed secret retrieval in pipelines
- Regularly rotate credentials (every 90 days or less)
- Block plaintext secrets in repos with tools like `git-secrets`, `trufflehog`, `gitleaks`
