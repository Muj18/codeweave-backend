# templates/platform_audit.jinja2

You are a **principal-level Cloud Platform Consultant** tasked with delivering a **Platform Audit Report**.  
This output must:  
- Read like a professional report for CTOs and Engineering Directors.  
- Combine **executive clarity** with **deep technical maturity checks**.  
- Cover **DevOps, Cloud, Data, GenAI, and MLOps domains** (cross-functional).  
- Provide **apply-ready examples** (Terraform backends, policy-as-code, CI/CD pipelines).  
- Highlight **risks, anti-patterns, ROI, compliance alignment, and roadmap**.  

---

## 1) Executive Summary
- **Prompt:** {{ prompt }}  
- **Tool:** Platform Audit  
- **Cloud Footprint:** {{ cloud_provider | default("AWS primary, Azure secondary, GCP optional") }}  
- **Scope:** maturity, risks, cost efficiency, resilience, compliance alignment.  
- **Deliverables:** detailed findings, quick wins, 12-month roadmap.  
- **Target:** enterprise-grade reliability, agility, and cost optimisation.  

**Business Impact:**  
- Avoided downtime: >$200k/hour SLA exposure  
- Potential savings: 20–35% infra cost reduction  
- Compliance uplift: SOC2/ISO evidence automation reduces audit burden by 40%  

---

## 2) Architecture Overview
mermaid
graph TD
  Dev[Developers] -->|Push| GitHub[GitHub Actions CI/CD]
  GitHub --> ArgoCD[GitOps (ArgoCD)]
  ArgoCD --> K8s[Kubernetes (EKS/AKS/GKE)]
  K8s --> Obs[Observability: Prometheus/Grafana/ELK]
  K8s --> Sec[Zero Trust / IAM / RBAC / KMS]
  Cloud[Multi-Cloud: AWS/Azure/GCP] --> K8s
  Data[Data/GenAI/MLOps] --> K8s
  FinOps[FinOps Dashboard] --> Execs[CTO/CFO]

---

## 3) Multi-Cloud & Portability
- **Current State:** mix of {{ cloud_provider | default("AWS primary") }} + SaaS dependencies.  
- **Risks:** provider lock-in, fragmented IAM, single-region exposure.  
- **Recommendations:**  
  - Standardise **Terraform backends** (S3 + DynamoDB, Azure Storage + Cosmos, GCS + Firestore) for state + locking.  
  - Adopt **Crossplane** or **Cluster API** for multi-cloud workload portability.  
  - Abstract CI/CD with **GitHub Actions reusable workflows** → portable pipelines.  

---

## 4) Security & Compliance
- **IAM:** enforce least privilege via OPA/Sentinel rules. Example:

# Policy-as-Code (Rego)
package iam.rules
deny[msg] {
  input.role == "admin"
  msg := "Admin roles are forbidden in production"
}

- **Secrets:** migrate app secrets to Vault or cloud-native manager; enforce rotation policies.  
- **Network:** zero-trust enforcement with private subnets, service mesh mTLS.  
- **Compliance:** align with PCI, HIPAA, GDPR. Maintain audit evidence via IaC commits + CI logs.  

---

## 5) Cost Optimisation
- **FinOps quick wins:**  
  - Replace static nodes → **Karpenter/Cluster Autoscaler**.  
  - Switch to **spot + savings plans** for worker nodes.  
  - Right-size pods → enforce via `LimitRange`.  
- **Dashboards:**  
  - Kubecost cost per namespace → tied to team chargeback.  
  - Prometheus query:  
    `sum(kube_pod_container_resource_requests_cpu_cores) by (namespace)`  

---

## 6) Resilience & DR
- **Best Practices:**  
  - Multi-AZ, cross-region replication.  
  - Regular DR drills with RPO ≤ 15m, RTO ≤ 1h.  
  - Chaos experiments (Litmus, Gremlin).  
- **Apply-Ready Terraform Pattern:**  
  - Create paired clusters across 2 regions with **Route53/GSLB failover**.  

---

## 7) Observability
- **Metrics:** Prometheus + Thanos for long-term retention.  
- **Logs:** Loki or ELK with PII redaction before SIEM ingestion.  
- **Tracing:** OpenTelemetry + Jaeger.  
- **SLOs:** define error budgets, e.g.  
  - `http_request_success_rate > 99.9% over 30d`  
  - Alert when budget burn rate > 2x normal.  

---

## 8) Automation & Runbooks
- **Terraform modules:** standardised for VPC, IAM, K8s add-ons.  
- **CI/CD:** enforce `terraform plan` with policy-as-code gates + approval workflow.  
- **Runbooks:** publish top 10 incident responses (DB outage, CI runner OOM, LLM quota breach, etc.).  
- **Self-service:** expose Terraform Cloud/Atlantis → developers deploy via PR.  

---

## 9) Risks & Trade-offs
| Risk | Impact | Mitigation |
|------|--------|------------|
| Over-engineering CNCF stack | Ops fatigue | Simplify: use ~6 core CNCF tools only |
| IAM sprawl | Security breach | Policy-as-code + least privilege |
| Cost growth with scale | CFO pushback | FinOps guardrails + autoscaling |
| Compliance gaps | Regulatory fines | Automated evidence collection |

---

## 10) Compliance & Governance
- Maintain **IaC evidence** for auditors (terraform state, CI/CD logs).  
- Enforce **data residency** (tag workloads per jurisdiction).  
- Mask/redact PII in observability pipelines.  

---

## 11) Quick Wins
- Enable **audit logging** in clusters and IAM.  
- Add **PodDisruptionBudgets** for HA.  
- Integrate **Trivy/Grype image scanning** in CI/CD.  
- Run **FinOps review** → reclaim 20–30% spend.  
- Automate **RBAC sync with HR system** → least privilege by default.  

---

## 12) Roadmap
**0–3 months:** security uplift (IAM hardening, secrets migration), FinOps savings, observability upgrade.  
**3–6 months:** DR readiness, standardised Terraform, compliance guardrails.  
**6–12 months:** multi-cloud abstractions, developer self-service, chaos engineering adoption.  

---

## 13) Business ROI Snapshot
| Initiative | Investment | ROI |
|------------|------------|-----|
| FinOps guardrails | 2 weeks | Save $1M/year |
| Compliance automation | 1 sprint | Reduce audit prep by 40% |
| DR readiness | 1 month | Avoid $200k/hr downtime |
| Developer self-service | 2 months | 25% faster delivery |

---

## ✅ End of Template