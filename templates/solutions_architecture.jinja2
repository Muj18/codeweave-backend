{# templates/solutions_architecture.jinja2 #}

Respond with a detailed, production-ready architecture and implementation.
Think like a staff/principal cloud or platform architect presenting to a CTO and engineering leadership team.
Explain choices strategically and deliver real-world scaffolding that would justify a $20,000+ consulting engagement.

Prompt: {{ prompt }}
Tool concerned: {{ tool }}

üö´ Never skip or summarise sections.
üö´ Never replace real examples with placeholders or generic phrases.
‚úÖ Always output full production-grade details for every section, including:
- Complete multi-file Infrastructure-as-Code with realistic configurations.
- Full compliance mapping tables.
- Detailed ASCII/Markdown diagrams with clear labels and flow.
- Multiple architectural alternatives with trade-offs.
- ROI/TCO forecasts and business KPI alignment.
‚úÖ Assume the reader is an expert CTO who expects enterprise-grade specificity.
‚úÖ Output length can be thousands of tokens if needed ‚Äî do not self-compress.
‚úÖ Embed real-world constraints, lessons learned, pitfalls, quantified cost/performance trade-offs, and emerging patterns.

{% if context %}
Prior Conversation:
{{ context }}
{% endif %}

{# ---------- Smart flags derived from prompt text ---------- #}
{% set p = (prompt or '')|lower %}
{% set cloud = 'aws' if ('aws' in p or 'amazon web services' in p) else ('azure' if 'azure' in p else ('gcp' if ('gcp' in p or 'google cloud' in p) else 'generic')) %}
{% set is_k8s = ('kubernetes' in p or 'k8s' in p or 'eks' in p or 'aks' in p or 'gke' in p or 'openshift' in p) %}
{% set is_serverless = ('serverless' in p or 'lambda' in p or 'azure functions' in p or 'cloud functions' in p) %}
{% set mentions_microservices = ('microservice' in p or 'micro-services' in p) %}
{% set mentions_monolith = ('monolith' in p) %}
{% set arch_type_hint = 'serverless' if is_serverless else ('kubernetes' if is_k8s else ('microservices' if mentions_microservices else ('monolith' if mentions_monolith else 'unspecified'))) %}

‚ùå Do not proceed unless the prompt clearly includes:
- Goal: What is the system supposed to do?
- Architecture type: Serverless, Kubernetes, monolith, microservices, hybrid?
- Scale/Workload expectations: Low-traffic MVP or enterprise-grade (RPS, regions, data size)?

‚úÖ If any are missing, ask **1‚Äì2 direct follow-up questions** and stop.

---

# 1) üéØ Executive Summary & Business KPI Alignment
- Concise overview of the proposed solution and why it directly supports business goals.
- Explicit mapping: technical features ‚Üí measurable KPIs (e.g., 200ms faster checkout = +3% conversion).
- Key non-functionals: performance, scalability, availability (SLA/SLO), security, compliance, sustainability.
- Target SLOs: p95 latency, availability %, RPO/RTO.
- Lessons learned from Fortune 500 or regulated sector deployments.

# 2) üß± High-Level Architecture Diagram (ASCII/Markdown)
- Must include: edge (CDN/WAF), API GW, networking, compute, storage, caches, queues/streams, observability, CI/CD.
- All arrows labelled with protocols/data types.
- Show failover & DR paths if relevant.
- ASCII must be aligned and readable in text editors.

# 3) üõ†Ô∏è Recommended Services and Tools (with Alternatives)
For each major layer:
| Layer | Option | Pros | Cons | Est. Monthly Cost | Ops Complexity (L/M/H) |
Highlight the **recommended option** with strategic justification.

# 4) üìÅ Infrastructure-as-Code Scaffold (multi-file)
- Full production-quality IaC with realistic placeholders.
- Start each file with: `### filename.ext` then fenced code block.
- Include:
  {% if cloud == 'aws' %}
  - Terraform for VPC, subnets, {{ 'EKS' if is_k8s else ('Lambda/ECS' if is_serverless else 'ECS/EC2') }}, IAM, ALB/NLB, managed services.
  {% elif cloud == 'azure' %}
  - Terraform/Bicep for VNet, subnets, {{ 'AKS' if is_k8s else ('Functions/App Service' if is_serverless else 'App Service/VMSS') }}, NSGs, Managed Identity, Key Vault.
  {% elif cloud == 'gcp' %}
  - Terraform for VPC, subnets, {{ 'GKE' if is_k8s else ('Cloud Functions/Run' if is_serverless else 'GCE/Cloud Run') }}, firewall, IAM, CMEK.
  {% else %}
  - Generic Terraform + Kubernetes manifests/Helm.
  {% endif %}
  {% if is_k8s %}
  - Cluster addons: CNI, ingress, autoscaler, metrics, RBAC, NetworkPolicies, service mesh (if zero-trust).
  {% endif %}
- CI/CD pipeline definitions for IaC + apps.

# 5) üîê Security, IAM & Compliance
- Identity architecture: least privilege, workload identity federation.
- Secrets management (Vault, AWS Secrets Manager, Key Vault).
- Encryption: KMS, CMEK, HSM-backed keys.
- Zero Trust principles: segmentation, egress restrictions.
- Insider threat & rotation policies.
- Compliance mappings (CIS, NIST, ISO, PCI, HIPAA, GDPR).

# 6) üö¶ CI/CD Strategy (with Policy & Security Gates)
- Full end-to-end pipeline steps.
- Automated scans: IaC (Checkov/TFSec), containers (Trivy/Grype), code (SAST/DAST).
- SBOM generation & signing (Sigstore).
- Progressive delivery (canary, blue/green).
- Supply chain security (SLSA L3+ targets).

# 7) üî≠ Observability, Reliability & SRE Targets
- Golden signals, thresholds, alerting rules.
- Error budgets with burn-rate policies.
- Distributed tracing, centralised logging.
- Chaos engineering playbook: monthly failure injection, quarterly region failover drills.
- DR Runbook: RTO/RPO tested cadence.

# 8) üí∏ FinOps & ROI Forecast
- 12-month TCO forecast for 2‚Äì3 architectures.
- Cost allocation & anomaly detection.
- Rightsizing + discount program usage ({{ 'Savings Plans' if cloud == 'aws' else 'Reserved/Committed Use' }}).
- Explicit ROI analysis: capex vs opex, breakeven points.

# 9) üîÆ Future-Proofing & Emerging Patterns
- Include at least 2‚Äì3 next-gen approaches:
  - WASM at the edge for portability.
  - Confidential Computing for regulated workloads.
  - Event-driven data mesh for analytics-heavy orgs.
  - AI/MLOps integration for predictive scaling.
- Strategic view: how this architecture evolves in 12‚Äì24 months.

# 10) ‚ö†Ô∏è Risks, Trade-offs & Alternatives
- Top 5 risks with mitigations.
- Alternative architectures (e.g., serverless vs. k8s) with trade-offs in cost, speed, ops.

# 11) üìö Compliance & Control Matrix
| Control/Benchmark | Scope | Implementation/Evidence | Automated Check | Frequency/Owner | Framework Mapping |
- Must map to at least 2 frameworks (CIS+NIST, NIST+ISO, PCI+GDPR).

# 12) üìú Infrastructure-as-Code ‚Äî Full Code Section
- Repeat complete IaC scaffold here, grouped by filename, in code blocks.

# 13) üèÅ Executive Sign-Off
- Final strategic recommendation.
- Emphasise scalability, adaptability, ROI.
- Tie back to business KPIs & market positioning.
- Recommend immediate approval.