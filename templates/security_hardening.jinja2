{# STREAMING NOTE:
   If the model cannot finish due to length, it should end with EXACTLY: [CONTINUE_NEEDED]
#}

You are a staff-level Cloud Security Engineer writing a **Security Hardening Playbook**.  
The output should cover IAM, encryption, compliance, observability, and quick wins.

Prompt: {{ prompt }}
Tool: Cloud Security (AWS / Azure / GCP)

---
## 1) Executive Summary
Security hardening ensures infrastructure is **least-privilege, encrypted, monitored, and compliant**.  
This playbook provides actionable steps to reduce attack surface and enforce governance.

---
## 2) Architecture Diagram
```mermaid
graph TD
  Dev[Developers] --> Code[Code Repo]
  Code -->|CI/CD| Pipeline[Pipeline: GitHub Actions/Azure DevOps]
  Pipeline --> Cloud[Cloud Providers: AWS/Azure/GCP]
  Cloud --> IAM[Identity & Access Mgmt]
  Cloud --> Data[Encrypted Storage: S3/Blob/GCS + KMS]
  Cloud --> Network[Secure VPC/Subnets/Firewalls]
  Cloud --> Observability[Logs/Metrics/Alerts]
```

---
## 3) Runbook: Step-by-Step

### a) Identity & Access Management
- Enforce **least privilege** roles (separate admin vs service).  
- Enable MFA for all human accounts.  
- Rotate keys, prefer OIDC over static creds.  
- Centralize identity (SSO, Azure AD, AWS IAM Identity Center).  

### b) Data Protection
- Encrypt at rest with KMS/CMK.  
- Encrypt in transit (TLS 1.2+).  
- Use envelope encryption for sensitive workloads.  
- Apply bucket/container policies denying public access.  

### c) Network Security
- Default deny in security groups & firewalls.  
- Use private subnets for workloads, NAT for egress.  
- Enforce ingress via WAF, API Gateway, or LB with TLS.  
- Enable VPC Flow Logs & NSG/Firewall Logs.  

### d) Workload Hardening
- Run containers as non-root, drop capabilities.  
- Apply CIS Benchmarks (OS + Kubernetes).  
- Regular patching + automated image scanning.  
- Enable IMDSv2 (AWS) or equivalent metadata service security.  

### e) Observability & Incident Response
- Centralize logs to SIEM (CloudWatch/Log Analytics/Stackdriver).  
- Alert on anomalous IAM activity.  
- Run security hub / defender / security command center.  
- Maintain a runbook for breach response (who, what, how).  

---
## 4) Risks & Trade-offs
❌ Overly strict IAM → developer friction → ✅ balance least privilege with break-glass roles.  
❌ Broad firewall rules → lateral movement → ✅ micro-segmentation.  
❌ No patch automation → exploitable workloads → ✅ automated scanning/patch pipelines.  
❌ Log overload → alert fatigue → ✅ tune signals vs noise.  

---
## 5) Compliance & Governance
- Map controls to PCI/GDPR/ISO27001/HIPAA.  
- Enforce tagging policies for ownership/audit.  
- Run periodic access reviews.  
- Document exceptions & approvals.  

---
## 6) Quick Wins
- Enable MFA + conditional access today.  
- Encrypt all buckets/volumes with KMS.  
- Block public S3/Blob/GCS by default.  
- Deploy CIS benchmarks scanner.  
- Add Infracost-like tool for **security budget** (Cloud Security Posture).  

[END OF TEMPLATE]